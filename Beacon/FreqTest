import numpy as np
import matplotlib.pyplot as plt
from scipy.io import wavfile

def autocorrelation(seq):
    n = len(seq)
    result = np.correlate(seq, seq, mode='full')
    return result[n-1:]

# Beacon specs
audio_files = [
    "Beacon/reference1.wav",
    "Beacon/reference2.wav",
    "Beacon/reference3.wav",
    "Beacon/reference4.wav",
    "Beacon/reference5.wav",
    "Beacon/reference6.wav",
    "Beacon/reference7.wav",
    "Beacon/reference8.wav",
    "Beacon/reference9.wav",
    "Beacon/reference10.wav",
    "Beacon/reference11.wav",
    "Beacon/reference12.wav"
]


for file in audio_files:
    Fs, audio = wavfile.read(file)
    audio = audio[:, 1]
    
    if file == "Beacon/reference1.wav":
        segment = audio[10000:12500]
    elif file == "Beacon/reference2.wav":
        segment = audio[5000:7500]
    elif file == "Beacon/reference3.wav":
        segment = audio[10000:12500]
    elif file == "Beacon/reference4.wav":
        segment = audio[6000:8500]
    elif file == "Beacon/reference5.wav":
        segment = audio[1000:3500]
    elif file == "Beacon/reference6.wav":
        segment = audio[0:17500]
    elif file == "Beacon/reference7.wav":
        segment = audio[2500:5000]
    elif file == "Beacon/reference8.wav":
        segment = audio[6500:9000]
    elif file == "Beacon/reference9.wav":
        segment = audio[0:2500]
    elif file == "Beacon/reference10.wav":
        segment = audio[11000:13500]
    elif file == "Beacon/reference11.wav":
        segment = audio[15000:17500]
    elif file == "Beacon/reference12.wav":
        segment = audio[17500:20000]
    else:
        segment = audio
    
    
    plt.plot(segment)
    plt.title(f"Reference signal for {file}")
    
    plot_filename = file.replace("Beacon/s", "").replace(".wav", ".png")
    plt.savefig(plot_filename)
    plt.close()



""" for file in audio_files:
    Fs, audio = wavfile.read(file)
    audio = audio[:, 1]
    autocorr = autocorrelation(audio)
    
    plt.figure()
    plt.plot(autocorr, marker='o', linestyle='-', color='b')
    plt.title(f'Autocorrelation of {file}')
    plt.xlabel('Lag')
    plt.ylabel('Autocorrelation')
    autocorr_filename = file.replace("Beacon/s", "").replace(".wav", "_autocorr.png")
    plt.savefig(autocorr_filename)
    plt.close() """


