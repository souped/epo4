import numpy as np
import matplotlib.pyplot as plt
from scipy.io import wavfile

def autocorrelation(seq):
    n = len(seq)
    result = np.correlate(seq, seq, mode='full')
    return result[n-1:]

# Beacon specs
audio_files = [
    #"gold_codes\\gold_code_ref2.wav",
    #"gold_codes\\gold_code_ref4.wav",
    #"gold_codes\\gold_code_ref6.wav",
    #"gold_codes\\gold_code_ref8.wav",
    #"gold_codes\\gold_code_ref10.wav",
    #"gold_codes\\gold_code_ref11.wav",
    #"gold_codes\\gold_code_ref12.wav",
    #"gold_codes\\gold_code_ref13.wav",
    #"extra test/12-06_ref2.wav",
    "newtest/12-06_ref2.wav"
]


for file in audio_files:
    Fs, audio = wavfile.read(file)
    
    
    audio = audio[:, 0]
    for i in range(len(audio)):
        if np.abs(audio[i])>200:
            start=i
            break   
    pulse=3072
    segment = audio[start-25:start+pulse]
    
    plt.plot(segment)
    plt.title(f"Reference signal for {file}")
    
    plot_filename = file.replace("gold_codes/s", "").replace(".wav", ".png")
    plt.savefig(plot_filename)
    plt.close()



""" for file in audio_files:
    Fs, audio = wavfile.read(file)
    audio = audio[:, 1]
    autocorr = autocorrelation(audio)
    
    plt.figure()
    plt.plot(autocorr, marker='o', linestyle='-', color='b')
    plt.title(f'Autocorrelation of {file}')
    plt.xlabel('Lag')
    plt.ylabel('Autocorrelation')
    autocorr_filename = file.replace("Beacon/s", "").replace(".wav", "_autocorr.png")
    plt.savefig(autocorr_filename)
    plt.close() """


